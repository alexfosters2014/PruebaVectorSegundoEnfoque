@inject ServiceEscalafon serviceEscalafon


<ModalFuncionarioOperativo Visibilidad="@visibilidadFunOperativoCL" ObtenerFuncionarioDTO="SeleccionarTipoFuncionarioCL" />
@*<ModalNombrePuesto Visibilidad="visibilidadNombrePuesto" servicioDTO="@servicioDTO" ObtenerNombrePuestoDTO="ObtenerNombrePuesto" />*@
@*<ModalAusencia CerrarModal="CerrarModal" AsignarFechasAusencia="AsignarFechasAusencia" Visibilidad="visibilidadFechasInicioFin" />
<ModalTipoFuncionario Visibilidad="visibilidadTipo" SeleccionarTipo="SeleccionarTipo" CerrarModal="CerrarModal"/>*@
@if (PlanDiarioDTO != null)
{
    @if (Estado == SD.EditEnum.LISTA.ToString())
    {
        <table class="table text-xsmall celdaNoDependienteTexto tamanioFuenteEstado">
            <tr>
                <td title="Tipo Funcionario : @PlanDiarioDTO.TipoFuncionarioOperativo" style="width:3%">
                    <img src="iconosPuesto/@ImagenTipoFunOperativo(PlanDiarioDTO.TipoFuncionarioOperativo)" class="imgEstado" />
                </td>
                <td title="Comienzo de jornada" style="width:3%">
                    <img src="iconosPuesto/iconEstados/@ImagenComienzoJornada()" class="imgEstadoIndicador" />
                </td>
                <td title="Estado Funcionario Operativo" style="width:7%">
                    <div style="padding:1px 3px;border-radius:3px;background-color:@(ColorEstado(PlanDiarioDTO.Computo.NombreDescriptivo))">
                        @PlanDiarioDTO.Computo.NombreDescriptivo
                    </div>
                </td>
                <td title="Nro. Funcionario Operativo" style="width:4%" align="center">@PlanDiarioDTO.FuncionarioOperativo.Numero</td>
                 <td title="Nombre Funcionario Operativo: @PlanDiarioDTO.FuncionarioOperativo.ToString()" style="width:12%" align="left">
                    <ImgRotativo TipoResumido="@PlanDiarioDTO.TipoResumido" />
                    @PlanDiarioDTO.FuncionarioOperativo.NombreCorto()
                </td>
                <td title="Teléfono Funcionario Operativo" style="width:8%" align="center">@PlanDiarioDTO.FuncionarioOperativo.Celular</td>


                @if (PlanDiarioDTO.Computo.NombreDescriptivo != SD.ComputosEnum.SIN_JORNAL_ASIGNADO.ToString().Replace("_", " "))
                {
                    <td title="Servicio" style="width:13%" align="center">@PlanDiarioDTO.Servicio.NombreDescriptivo</td>
                    <td title="Hora Entrada" style="width:4%" align="center">@PlanDiarioDTO.HoraEntrada.ToString("HH:mm")</td>
                    <td title="Hora Salida" style="width:4%" align="center">@PlanDiarioDTO.HoraSalida.ToString("HH:mm")</td>
                   
                }
                else
                {
                    <td title="Servicio" style="width:13%" align="center">---</td>
                    <td title="Hora Entrada" style="width:4%" align="center">---</td>
                    <td title="Hora Salida" style="width:4%" align="center">---</td>
                }


                <td title="Observaciones : @PlanDiarioDTO.Observaciones" style="width:15%" align="left">@RecorteObservaciones(PlanDiarioDTO.Observaciones)</td>
                @if (PlanDiarioDTO.Computo.NombreDescriptivo != SD.ComputosEnum.SIN_JORNAL_ASIGNADO.ToString().Replace("_", " "))
                {
                    <td title="Horas totales" style="width:3%" align="center">@PlanDiarioDTO.CantidadHorasTotales</td>
                    <td title="Horas extras" style="width:3%" align="center">@PlanDiarioDTO.CantidadHorasExtras</td>
                    <td title="Puesto: @PlanDiarioDTO.NombrePuesto" style="width:9%">@PlanDiarioDTO.NombrePuestoCorto()</td>
                    <td title="Facturable?" style="width:2%"><img src="iconosPuesto/iconEstados/@FacturableIcono(PlanDiarioDTO.Facturable)" class="imgEstado" /></td>
                }
                else
                {
                    <td title="Horas totales" style="width:3%" align="center">---</td>
                    <td title="Horas extras" style="width:3%" align="center">---</td>
                    <td title="Puesto: @PlanDiarioDTO.NombrePuesto" style="width:9%">---</td>
                    <td title="Facturable?" style="width:2%">---</td>
                }
                @if (!SD.EstadosComputosModal[PlanDiarioDTO.Computo.NombreDescriptivo])
                {
                    <td>
                        <button class="btn btn-outline-primary pt-0 pb-0" @onclick="Edicion">Editar</button>
                    </td>
                    <td>
                        <a href="" @onclick="@EliminarEstado" @onclick:preventDefault>
                            <img src="icons/delete.png" class="imgEstado" />
                        </a>
                    </td>
                }
                else
                {
                    <td>
                        <button class="btn btn-outline-secondary pt-0 pb-0" disabled>Editar</button>
                    </td>
                    <td>
                        <a href="" class="btn-disabled" @onclick:preventDefault disabled="disabled">
                            <img src="icons/deleteDisabled.png" class="imgEstado" />
                        </a>
                    </td>
                }
            </tr>
        </table>
    }

    @if (Estado == SD.EditEnum.EDICION.ToString())
    {
        <ModalTipoFuncionario Visibilidad="false" />
        <table class="table w-auto text-xsmall" style="background:linear-gradient(0deg, rgba(210,210,210,1) 0%, rgba(190,190,190,1) 100%)">
            <tr>
                <th>Tipo</th>
                <th width="150px">Estado</th>
                <th>Nro.</th>
                <th>Funcionario</th>
                <th>Celular</th>
                <th>Entrada</th>
                <th>Salida</th>
                <th>Cubre Libre</th>
                <th>Observaciones</th>
                <th>Puesto</th>
                <th>Facturable</th>

            </tr>
            <tr>
                <td style="vertical-align:middle">
                    <a href="" @onclick="CambiarTipoFuncionario" @onclick:preventDefault>
                        <img src="iconosPuesto/@ImagenTipoFunOperativo(PlanDiarioDTO.TipoFuncionarioOperativo)" class="imgEstado" />
                    </a>
                </td>
                <td style="vertical-align:middle">
                    <select class="form-select colorDark" @onchange="SeleccionEstado">
                        @foreach (var estado in serviceEscalafon.EscalafonModel.ComputosDTO)
                        {
                            if (PlanDiarioDTO.Computo.Id == estado.Id)
                            {
                                <option value="@estado.Id" selected>@estado.NombreDescriptivo</option>
                            }
                            else
                            {
                                <option value="@estado.Id">@estado.NombreDescriptivo</option>
                            }
                        }
                    </select>
                </td>
                <td style="vertical-align:middle">@PlanDiarioDTO.FuncionarioOperativo.Numero</td>
                <td style="vertical-align:middle">@PlanDiarioDTO.FuncionarioOperativo.ToString()</td>
                <td style="vertical-align:middle"><input @bind="PlanDiarioDTO.FuncionarioOperativo.Celular" class="form-control colorDark" /></td>
                <td style="vertical-align:middle"><input type="time" @bind="PlanDiarioDTO.HoraEntrada" class="form-control colorDark" /></td>
                <td style="vertical-align:middle"><input type="time" @bind="PlanDiarioDTO.HoraSalida" class="form-control colorDark" /></td>
                <td style="vertical-align:middle">
                    @PlanDiarioDTO.FuncionarioSegundoNivel
                    <a href="" @onclick="CambiarFuncionarioCubreLibre" @onclick:preventDefault>
                        <img src="iconosPuesto/Otros/lupa.png" class="imgEstado" />
                    </a>
                </td>
                <td style="vertical-align:middle"><input @bind="PlanDiarioDTO.Observaciones" class="form-control colorDark" /></td>
                <td style="vertical-align:middle">
                    @PlanDiarioDTO.NombrePuesto
                    <a href="" @onclick="CambiarNombrePuesto" @onclick:preventDefault>
                        <img src="iconosPuesto/Otros/lupa.png" class="imgEstado" />
                    </a>
                </td>
                <td style="vertical-align:middle">
                    <select class="form-select colorDark" @bind="PlanDiarioDTO.Turno">
                        @foreach (var tur in SD.TurnosDiccionario)
                        {
                            if (tur.Key == PlanDiarioDTO.Turno)
                            {
                                <option value="@tur.Key" selected>@tur.Value</option>
                            }
                            else
                            {
                                <option value="@tur.Key">@tur.Value</option>
                            }
                        }
                    </select>
                </td>
                <td style="vertical-align:middle"><SfSwitch @bind-Checked="PlanDiarioDTO.Facturable" /></td>
            </tr>
    <tr>
        <td colspan="15" align="center">
            <button class="btn btn-outline-secondary" @onclick="Guardar">Guardar</button>
            <button class="btn btn-outline-secondary" @onclick="Cancelar">Cancelar</button>
        </td>
    </tr>
</table>
}
}
@code {
    [Parameter]
    public PlanificacionDiariaDTO PlanDiarioDTO { get; set; }

    [Parameter]
    public EventCallback<PlanificacionDiariaDTO> ActualizarPlanDiario { get; set; }

    [Parameter]
    public EventCallback<PlanificacionDiariaDTO> EliminarPlanDiario { get; set; }

    [Parameter]
    public ServicioDTO servicioDTO { get; set; }

    private string Estado = SD.EditEnum.LISTA.ToString();

    private bool visibilidadFunOperativoCL = false;
    private bool visibilidadNombrePuesto = false;
    private bool visibilidadFechasInicioFin = false;
    private bool visibilidadTipo = false;
    private bool visibilidadOpciones = false;

    public int idEstado = 0;

    private void Edicion()
    {
        Estado = SD.EditEnum.EDICION.ToString();
    }
    private async Task Guardar()
    {
        //ir al servicio de escalafon para actualizar el plan
        Estado = SD.EditEnum.LISTA.ToString();
        await ActualizarPlanDiario.InvokeAsync(PlanDiarioDTO);
    }
    private void Cancelar()
    {
        Estado = SD.EditEnum.LISTA.ToString();
    }
    private string ColorEstado(string estado)
    {
        return SD.EstadosComputosColor[estado];
    }

    private string DatoFuncionarioCubreLibre(string func) => (func != "" ? func : "---");

    private string ImagenActividadSegundoNivel() => (PlanDiarioDTO.SegundoNivel ? "bandera.png" : "vacio.png");

    private string FacturableIcono(bool dato) => dato ? "siFacturable.png" : "noFacturable.png";

    private string RecorteObservaciones(string obs)
    {
        string recorteObs;

        if (string.IsNullOrEmpty(obs))
        {
            recorteObs = "---";
        }
        else
        {
            if (obs.Length < 31)
            {
                recorteObs = obs;
            }
            else
            {
                recorteObs = $"{obs.Substring(0, 27)}...";
            }
        }
        return recorteObs;
    }

    private string ImagenTipoFunOperativo(string tipo) => tipo != null ? SD.TipoFuncionarioOperativo[tipo] : null;

    private string ImagenComienzoJornada() => PlanDiarioDTO.ComienzoJornada ? "comienzoJornada.png" : "vacio.png";

    private async Task EliminarEstado()
    {
        await EliminarPlanDiario.InvokeAsync(PlanDiarioDTO);
    }

    private async Task AsignarFechasAusencia(AusenciaDTO ausenciaDTO)
    {
        PlanDiarioDTO.AusenciaDTO = ausenciaDTO;
        PlanDiarioDTO.AusenciaDTO.Computo = PlanDiarioDTO.Computo;
        PlanDiarioDTO.AusenciaDTO.Funcionario = PlanDiarioDTO.FuncionarioOperativo;
        PlanDiarioDTO.AusenciaDTO.Servicio = PlanDiarioDTO.Servicio;
        visibilidadFechasInicioFin = false;
    }

    private async Task SeleccionarTipoFuncionarioCL(FuncionarioDTO funcionario)
    {
        if (funcionario != null)
        {
            PlanDiarioDTO.FuncionarioSegundoNivel = $"{funcionario.Numero}-{funcionario.NombreCorto()}";
        }else
        {
            PlanDiarioDTO.FuncionarioSegundoNivel = "";
        }
        visibilidadFunOperativoCL = false;
    }

    private async Task ObtenerNombrePuesto(string nombrePuesto)
    {
        if (!string.IsNullOrEmpty(nombrePuesto))
        {
            PlanDiarioDTO.NombrePuesto = nombrePuesto;
        }
        visibilidadNombrePuesto = false;
    }
    private async Task CambiarFuncionarioCubreLibre()
    {
        visibilidadFunOperativoCL = true;
    }
    private async Task CambiarNombrePuesto()
    {
        visibilidadNombrePuesto = true;
    }
    private async Task CambiarTipoFuncionario()
    {
        visibilidadTipo = true;
    }

    private async Task SeleccionarTipo(string tipo)
    {
        if (!string.IsNullOrEmpty(tipo))
        {
            PlanDiarioDTO.TipoFuncionarioOperativo = tipo;
            visibilidadTipo = false;
        }
    }
    private void SeleccionEstado(ChangeEventArgs e)
    {
        idEstado = SD.ConvertStringToInt(e.Value.ToString());
        var computo = serviceEscalafon.EscalafonModel.ComputosDTO.SingleOrDefault(s => s.Id == idEstado);
        if (computo != null)
        {
            PlanDiarioDTO.Computo = computo;
            visibilidadFechasInicioFin = SD.EstadosComputosModal[computo.NombreDescriptivo];
        }
    }

    private async Task CerrarModal()
    {
        visibilidadFunOperativoCL = false;
        visibilidadNombrePuesto = false;
        visibilidadFechasInicioFin = false;
        visibilidadTipo = false;
        visibilidadOpciones = false;
    }

}
