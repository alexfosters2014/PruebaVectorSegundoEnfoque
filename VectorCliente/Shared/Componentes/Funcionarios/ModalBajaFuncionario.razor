@inject IJSRuntime js

<SfDialog Width="350px" Target="#target" IsModal="true" @bind-Visible="Visibilidad">
    <DialogTemplates>
        <Header><p style="color:blueviolet;font-weight:300">@modelBajaFuncionarioDTO.Funcionario</p></Header>
        <Content>
            <div class="form-group">
                <label>Fecha de egreso</label>
                <input type="date" @bind="modelBajaFuncionarioDTO.FechaBaja" class="form-control borderActive" />
            </div>
            <div class="form-group">
                <label>Motivo de egreso</label>
                    <input type="text" @bind="modelBajaFuncionarioDTO.Motivo" class="form-control borderActive" />
            </div>
            <div class="row justify-content-center">
                <button class="btn btn-primary form-control col-5 mr-2" @onclick="BajaDefinitivaFuncionario">Dar de Baja</button>
                <button class="btn btn-primary form-control col-5 ml-2" @onclick="Cerrar">Cancelar</button>
            </div>
        </Content>
    </DialogTemplates>
    @*<DialogEvents OnOpen="@DialogOpen" Closed="@DialogClose" OnOverlayModalClick="@OverlayClick"></DialogEvents>*@
    <DialogAnimationSettings Effect="@DialogEffect.Fade"></DialogAnimationSettings>
</SfDialog>
<style>
    #target {
        max-height: 800px;
        height: 100%;
    }
</style>
@code {
    [Parameter]
    public bool Visibilidad { get; set; }

    [Parameter]
    public EventCallback<ModelBajaFuncionario> BajaDefinitiva { get; set; }

    [Parameter]
    public EventCallback CerrarModal { get; set; }

    [Parameter]
    public ModelBajaFuncionario modelBajaFuncionarioDTO { get; set; }

    private string motivo;

    private async Task BajaDefinitivaFuncionario()
    {
        if (modelBajaFuncionarioDTO.FechaBaja <= DateTime.Today.Date && !string.IsNullOrEmpty(modelBajaFuncionarioDTO.Motivo))
        {
            await BajaDefinitiva.InvokeAsync(modelBajaFuncionarioDTO);
        }
        else
        {
            await js.MsgAdvertencia("La fecha debe ser anterior a la fecha de hoy y el motivo no puede ser un campo vacio");
            return;
        }
    }
    private async Task Cerrar()
    {
        await CerrarModal.InvokeAsync();
    }


}