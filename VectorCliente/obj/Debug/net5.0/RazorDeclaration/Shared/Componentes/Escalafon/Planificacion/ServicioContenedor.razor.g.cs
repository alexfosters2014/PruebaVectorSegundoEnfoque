// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace VectorCliente.Shared.Componentes.Escalafon.Planificacion
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using VectorCliente;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using VectorCliente.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using Syncfusion.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using Syncfusion.Blazor.Buttons;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using Blazored.LocalStorage;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using Blazored.SessionStorage;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using Comun;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using Modelo;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using Modelo.ViewModels;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using Modelo.OtherModels;

#line default
#line hidden
#nullable disable
#nullable restore
#line 19 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using VectorCliente.Helpers;

#line default
#line hidden
#nullable disable
#nullable restore
#line 20 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using VectorCliente.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 21 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using VectorCliente.Services.IServices;

#line default
#line hidden
#nullable disable
#nullable restore
#line 22 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using Blazored.Toast;

#line default
#line hidden
#nullable disable
#nullable restore
#line 23 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using Blazored.Toast.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 24 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using VectorCliente.Shared.Componentes;

#line default
#line hidden
#nullable disable
#nullable restore
#line 25 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using VectorCliente.Shared.Componentes.Escalafon;

#line default
#line hidden
#nullable disable
#nullable restore
#line 26 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using VectorCliente.Shared.Widget;

#line default
#line hidden
#nullable disable
#nullable restore
#line 27 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using Syncfusion.Blazor.Popups;

#line default
#line hidden
#nullable disable
#nullable restore
#line 28 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using VectorCliente.Shared.Componentes.Escalafon.Modal;

#line default
#line hidden
#nullable disable
#nullable restore
#line 29 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using VectorCliente.Shared.Componentes.Escalafon.Planificacion;

#line default
#line hidden
#nullable disable
#nullable restore
#line 30 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using VectorCliente.Shared.Componentes.Funcionarios;

#line default
#line hidden
#nullable disable
#nullable restore
#line 31 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using BlazorAnimate;

#line default
#line hidden
#nullable disable
#nullable restore
#line 32 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using Microsoft.AspNetCore.SignalR.Client;

#line default
#line hidden
#nullable disable
    public partial class ServicioContenedor : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 63 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\Shared\Componentes\Escalafon\Planificacion\ServicioContenedor.razor"
       
    [Parameter]
    public ServicioDTO Servicio { get; set; }

    [Parameter]
    public List<PlanificacionDiariaDTO> EstadosDiarios { get; set; }

    private List<TurnoPuestos> turnosEstados;

    PlanificacionDiariaDTO planNuevoEnServicio = null;

    private bool VisibilidadMoverServicio = false;

    PlanificacionDiariaDTO estadoAMover = null;

    [Parameter]
    public EventCallback<ServicioDTO> VerPrefFuncionarioServicio { get; set; }

    public bool momentoFiltrado { get; set; } = false;



    protected async override Task OnInitializedAsync()
    {
        //await ActualizarTurnos();
    }

    protected async override Task OnParametersSetAsync()
    {
        await ActualizarTurnos();
    }

    private void CerrarModal()
    {
        VisibilidadMoverServicio = false;
    }

    private async Task ActualizarTurnos()
    {
        turnosEstados = new();
        turnosEstados = EstadosDiarios
                                       .OrderBy(o => o.Turno)
                                       .ThenBy(t => t.Orden)
                                       .GroupBy(g => g.Turno)
                                       .Select(s => new TurnoPuestos()
                                           {
                                               Turno = s.Key,
                                               PlanesDTO = s.ToList()
                                           })
                                        .ToList();
    }


    private async Task NuevoEstado()
    {
        planNuevoEnServicio = new()
        {
            Fecha = serviceEscalafon.FechaPlanificacion,
            Orden = Generador.GenerarGUID(),
            FuncionarioOperativo = new(),
            HoraEntrada = serviceEscalafon.FechaPlanificacion,
            HoraSalida = serviceEscalafon.FechaPlanificacion,
            Turno = 6,
            FuncionarioSegundoNivel = "",
            Facturable = true,
            Servicio = Servicio,
            ComienzoJornada = false,
            NombrePuesto = "---",
            TipoFuncionarioOperativo = "CIVIL",
            SegundoNivel = false,
            MostrarEnEscalafon = true,
            IdMesaOperativa = serviceEscalafon.IdMesaOperativaEnPlanificacion
        };

    }

    private async Task NuevoEstadoSegundoNivel(PlanificacionDiariaDTO planDTO) //es un eventcallback
    {
        try
        {

            planNuevoEnServicio = new()
                {
                    Fecha = serviceEscalafon.FechaPlanificacion,
                    Orden = planDTO.Orden,
                    FuncionarioOperativo = await serviceEscalafon.ObtenerFuncionarioSegunNumero(planDTO.FuncionarioSegundoNivel),
                    HoraEntrada = planDTO.HoraEntrada,
                    HoraSalida = planDTO.HoraSalida,
                    Turno = planDTO.Turno,
                    FuncionarioSegundoNivel = "---",
                    Facturable = planDTO.Facturable,
                    Servicio = Servicio,
                    ComienzoJornada = planDTO.ComienzoJornada,
                    NombrePuesto = planDTO.NombrePuesto,
                    TipoFuncionarioOperativo = "CIVIL",
                    Extra = planDTO.Extra,
                    SegundoNivel = true,
                    MostrarEnEscalafon = true,
                    IdMesaOperativa = serviceEscalafon.IdMesaOperativaEnPlanificacion
                };
        }catch(Exception ex)
        {
            toastService.ShowError(ex.Message);
        }
    }

    private async Task RegistrarPlanDiario(PlanificacionDiariaDTO plan)
    {
        try
        {
            PlanificacionDiariaDTO planNuevo = await serviceEscalafon.AgregarEstado(plan);
            if (planNuevo == null)
            {
                toastService.ShowWarning("No se pudo registrar");
                return;
            }
            planNuevoEnServicio = null;
            toastService.ShowSuccess("Registro Exitoso");
        }catch(Exception ex)
        {
            toastService.ShowError(ex.Message);
        }
    }

    private async Task ActualizarPlanDiario(PlanificacionDiariaDTO plan)
    {
        try
        {
            PlanificacionDiariaDTO planActualizado = await serviceEscalafon.ActualizarPlanDiario(plan);
            if (planActualizado == null)
            {
                toastService.ShowWarning("No se pudo actualizar. Ha ocurrido un error");
                return;
            }
            planNuevoEnServicio = null;
            await sessionStorage.RemoveItemAsync(SD.SessionEdicionEstado);
            toastService.ShowSuccess("Cambio Exitoso");
        }catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }


    private async Task CancelarNuevoEstado()
    {
        planNuevoEnServicio = null;

    }

    private async Task EliminarPlanDiario(PlanificacionDiariaDTO plan)
    {
        try
        {
            if (plan == null)
            {
                return;
            }
            bool confirmacion = await js.MsgConfirmacion("Desea eliminar este estado del funcionario");
            if (!confirmacion) { return;  }
            bool resultado = await serviceEscalafon.EliminarPlanDiario(plan);
            if (resultado)
            {
                toastService.ShowSuccess("Eliminación del estado de funcionario exitosa");
            }
        }
        catch (Exception ex)
        {
            toastService.ShowWarning(ex.Message);
        }
    }

    private async Task VerPrefFS()
    {
        await VerPrefFuncionarioServicio.InvokeAsync(Servicio);
    }

    private async Task VisorEstadosEnServicio()
    {
        try
        {
            VisorHistorialServicio visor = new()
                {
                    FechaPlanificacionActual = serviceEscalafon.FechaPlanificacion,
                    ServicioDTORef = Servicio
                };
            await localStorage.SetItemAsync(SD.VisorHistorialServicio, visor);

            await js.WindowPopUp($"/VisorHorariosServicio/{Servicio.Id}",1200);

        }catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }

    private async Task HabilitarModalMoverAOtroServicio(PlanificacionDiariaDTO estado)
    {
        VisibilidadMoverServicio = true;
        estadoAMover = estado;
    }

    private async Task MoverAOtroServicio(ServicioDTO servicioDTO)
    {
        try
        {
            ServicioDTO servicioAnterior = estadoAMover.Servicio;

            estadoAMover.Servicio = servicioDTO;
            var mover = await serviceEscalafon.MoverAOtroServicioPlanDiario(estadoAMover,servicioAnterior);
            if (mover == null)
                throw new Exception("No se ha podido mover el funcionario al servicio especificado");

            VisibilidadMoverServicio = false;
            toastService.ShowSuccess("Movido correctamente");
        }catch (Exception ex)
        {
            VisibilidadMoverServicio = false;
            await js.MsgError(ex.Message);
        }
    }




    

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ILocalStorageService localStorage { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ISessionStorageService sessionStorage { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager nav { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IToastService toastService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ServiceEscalafon serviceEscalafon { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime js { get; set; }
    }
}
#pragma warning restore 1591
