// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace VectorCliente.Pages.ClientesServicios
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using VectorCliente;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using VectorCliente.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using Syncfusion.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using Syncfusion.Blazor.Buttons;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using Blazored.LocalStorage;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using Blazored.SessionStorage;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using Comun;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using Modelo;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using Modelo.ViewModels;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using Modelo.OtherModels;

#line default
#line hidden
#nullable disable
#nullable restore
#line 19 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using VectorCliente.Helpers;

#line default
#line hidden
#nullable disable
#nullable restore
#line 20 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using VectorCliente.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 21 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using VectorCliente.Services.IServices;

#line default
#line hidden
#nullable disable
#nullable restore
#line 22 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using Blazored.Toast;

#line default
#line hidden
#nullable disable
#nullable restore
#line 23 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using Blazored.Toast.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 24 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using VectorCliente.Shared.Componentes;

#line default
#line hidden
#nullable disable
#nullable restore
#line 25 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using VectorCliente.Shared.Componentes.Escalafon;

#line default
#line hidden
#nullable disable
#nullable restore
#line 26 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using VectorCliente.Shared.Widget;

#line default
#line hidden
#nullable disable
#nullable restore
#line 27 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using Syncfusion.Blazor.Popups;

#line default
#line hidden
#nullable disable
#nullable restore
#line 28 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using VectorCliente.Shared.Componentes.Escalafon.Modal;

#line default
#line hidden
#nullable disable
#nullable restore
#line 29 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using VectorCliente.Shared.Componentes.Escalafon.Planificacion;

#line default
#line hidden
#nullable disable
#nullable restore
#line 30 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using VectorCliente.Shared.Componentes.Funcionarios;

#line default
#line hidden
#nullable disable
#nullable restore
#line 31 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using BlazorAnimate;

#line default
#line hidden
#nullable disable
#nullable restore
#line 32 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\_Imports.razor"
using Microsoft.AspNetCore.SignalR.Client;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/ClientesServicios")]
    public partial class MantenimientoClientesServicios : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 158 "C:\Users\Alex\Source\Repos\alexfosters2014\PruebaVectorSegundoEnfoque\VectorCliente\Pages\ClientesServicios\MantenimientoClientesServicios.razor"
      
    private List<ClienteDTO> clientes;
    private List<ServicioDTO> servicios = null;
    private ClienteDTO clienteSeleccionado = null;
    private ServicioDTO servicioSeleccionado = null;
    private List<MesaOperativaDTO> mop;
    private UsuarioDTO usuarioDTO;
    private bool habilitacionNuevoServicio = false;

    private string clienteSwitch = SD.EditEnum.LISTA.ToString();
    private string servicioSwitch = SD.EditEnum.LISTA.ToString();

    protected async override Task OnInitializedAsync()
    {
        try
        {
            usuarioDTO = await localStorage.GetItemAsync<UsuarioDTO>(SD.LocalUsuario);
            clientes = await serviceCliente.ObtenerTodos(usuarioDTO.Token);
            mop = await serviceMOP.ObtenerTodos(usuarioDTO.Token);
        }
        catch (Exception ex)
        {
            await js.MsgError(ex.Message);
        }
    }

    private async Task VerServicios(int clienteId)
    {
        try
        {
            clienteSeleccionado = clientes.Find(f => f.Id == clienteId);
            servicios = await serviceServicio.ObtenerPorCliente(clienteId, usuarioDTO.Token);
            habilitacionNuevoServicio = true;
            StateHasChanged();
        }
        catch (Exception ex)
        {
            await js.MsgError(ex.Message);
        }
    }
    private async void EditarCliente(int id)
    {
        clienteSeleccionado = clientes.Find(f => f.Id == id);
        if (clienteSeleccionado != null)
        {
            clienteSwitch = SD.EditEnum.EDICION.ToString();
        }
        else
        {
            await js.MsgAdvertencia("No se pudo encontrar el cliente seleccionado");
        }
    }
    private async Task BajaCliente(int clienteId)
    {
        try
        {
            bool confirmacion = await js.MsgConfirmacion("Desea eliminar el cliente seleccionado?");
            if (confirmacion)
            {
                bool bajaServicios = await serviceServicio.BajaServiciosPorCliente(clienteId, usuarioDTO.Token);
                if (bajaServicios)
                {
                    bool bajaCliente = await serviceCliente.Baja(clienteId, usuarioDTO.Token);
                    if (bajaCliente)
                    {
                        clienteSeleccionado = clientes.Find(f => f.Id == clienteId);
                        clientes.Remove(clienteSeleccionado);
                        clienteSeleccionado = new ClienteDTO();
                        await js.MsgExitoso("Se ha dado de baja el cliente exitosamente");
                        StateHasChanged();
                    }
                }
            }
        }
        catch (Exception ex)
        {
            await js.MsgError(ex.Message);
        }
    }
    private async void NuevoCliente()
    {
        habilitacionNuevoServicio = false;
        clienteSeleccionado = new ClienteDTO();
        if (clienteSeleccionado != null)
        {
            clienteSwitch = SD.EditEnum.NUEVO.ToString();
        }
        else
        {
            await js.MsgAdvertencia("No se pudo encontrar el cliente seleccionado");
        }
    }
    private async Task EditarServicio(int id)
    {
        servicioSeleccionado = servicios.Find(f => f.Id == id);
        if (servicioSeleccionado != null)
        {
            servicioSwitch = SD.EditEnum.EDICION.ToString();
        }
        else
        {
            await js.MsgAdvertencia("No se pudo encontrar el servicio seleccionado");
        }
    }

    private async Task BajaServicio(int servicioId)
    {
        try
        {
            bool confirmacion = await js.MsgConfirmacion("Desea eliminar el cliente seleccionado?");
            if (confirmacion) {
                bool bajaServicio = await serviceServicio.Baja(servicioId, usuarioDTO.Token);
                if (bajaServicio)
                {
                    servicioSeleccionado = servicios.Find(f => f.Id == servicioId);
                    servicios.Remove(servicioSeleccionado);
                    servicioSeleccionado = new ServicioDTO();
                    await js.MsgExitoso("Se ha dado de baja el servicio exitosamente");
                    StateHasChanged();
                }
            }
        }
        catch (Exception ex)
        {
            await js.MsgError(ex.Message);
        }
    }

    private async Task NuevoServicio()
    {
        servicioSeleccionado = new ServicioDTO();
        servicioSeleccionado.Cliente = clienteSeleccionado;
        servicioSeleccionado.DependeDe = new MesaOperativaDTO();

        if (servicioSeleccionado != null)
        {
            servicioSwitch = SD.EditEnum.NUEVO.ToString();
        }
        else
        {
            await js.MsgAdvertencia("No se pudo encontrar el cliente seleccionado");
        }
    }

    private void NuevoActualizarCliente(ClienteDTO clienteDTO)
    {
        if (clienteDTO != null)
        {
            ClienteDTO clienteAux = clientes.Find(f => f.Id == clienteDTO.Id);
            if (clienteAux != null)
            {
                clienteAux = clienteDTO;
            }
            else
            {
                clientes.Add(clienteDTO);
            }
            StateHasChanged();
        }
        clienteSwitch = SD.EditEnum.LISTA.ToString();
    }

    private void NuevoActualizarServicio(ServicioDTO servicioDTO)
    {
        if (servicioDTO != null)
        {
            ServicioDTO servicioAux = servicios.Find(f => f.Id == servicioDTO.Id);
            if (servicioAux != null)
            {
                servicioAux = servicioDTO;
            }
            else
            {
                servicios.Add(servicioDTO);
            }
            StateHasChanged();
        }
        servicioSwitch = SD.EditEnum.LISTA.ToString();
    }


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IServiceMesaOperativa serviceMOP { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IServiceServicio serviceServicio { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IServiceCliente serviceCliente { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime js { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager nav { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ILocalStorageService localStorage { get; set; }
    }
}
#pragma warning restore 1591
