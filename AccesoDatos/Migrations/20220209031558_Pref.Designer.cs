// <auto-generated />
using System;
using AccesoDatos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AccesoDatos.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220209031558_Pref")]
    partial class Pref
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AccesoDatos.Ausencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ComputoId")
                        .HasColumnType("int");

                    b.Property<bool>("ConfirmadoPorRRHH")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Desde")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Hasta")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ServicioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComputoId");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("ServicioId");

                    b.ToTable("Ausencias");
                });

            modelBuilder.Entity("AccesoDatos.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreFantasia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RazonSocial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RutCi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("AccesoDatos.Computo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ComputaFalta")
                        .HasColumnType("bit");

                    b.Property<string>("NombreDescriptivo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Computos");
                });

            modelBuilder.Entity("AccesoDatos.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartamentoOperativo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiaLibre")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoActividad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaEgreso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaEmisionCAJ")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Reingreso")
                        .HasColumnType("bit");

                    b.Property<int?>("RespondeAId")
                        .HasColumnType("int");

                    b.Property<bool>("Rotativo")
                        .HasColumnType("bit");

                    b.Property<int?>("RubroId")
                        .HasColumnType("int");

                    b.Property<bool>("SegundoLibrePosterior")
                        .HasColumnType("bit");

                    b.Property<bool>("SegundoLibreTrabajado")
                        .HasColumnType("bit");

                    b.Property<double>("SueldoNominal")
                        .HasColumnType("float");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipoContratoId")
                        .HasColumnType("int");

                    b.Property<string>("TipoResumido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UltimaActualizacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UltimaFechadeBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VtoCarneSalud")
                        .HasColumnType("datetime2");

                    b.Property<string>("Zona")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("habArmado")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("RespondeAId");

                    b.HasIndex("RubroId");

                    b.HasIndex("TipoContratoId");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("AccesoDatos.MesaOperativa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MesasOperativas");
                });

            modelBuilder.Entity("AccesoDatos.NombrePuesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("ServicioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique()
                        .HasFilter("[Nombre] IS NOT NULL");

                    b.HasIndex("ServicioId");

                    b.ToTable("NombresPuestos");
                });

            modelBuilder.Entity("AccesoDatos.OperativaDiaria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CantidadHorasArmado")
                        .HasColumnType("float");

                    b.Property<double>("CantidadHorasExtras")
                        .HasColumnType("float");

                    b.Property<double>("CantidadHorasTotales")
                        .HasColumnType("float");

                    b.Property<bool>("CheckIn")
                        .HasColumnType("bit");

                    b.Property<bool>("CheckOut")
                        .HasColumnType("bit");

                    b.Property<bool>("ComienzoJornada")
                        .HasColumnType("bit");

                    b.Property<int?>("ComputoId")
                        .HasColumnType("int");

                    b.Property<bool>("Extra")
                        .HasColumnType("bit");

                    b.Property<bool>("Facturable")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FuncionarioOperativoId")
                        .HasColumnType("int");

                    b.Property<string>("FuncionarioSegundoNivel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HoraEntrada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HoraEntradaMarcada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HoraSalida")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HoraSalidaMarcada")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HoySegundoLibre")
                        .HasColumnType("bit");

                    b.Property<int>("IdMesaOperativa")
                        .HasColumnType("int");

                    b.Property<bool>("MostrarEnEscalafon")
                        .HasColumnType("bit");

                    b.Property<string>("NombrePuesto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Orden")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ProximoSegundoLibre")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Rotativo")
                        .HasColumnType("bit");

                    b.Property<bool>("SegundoNivel")
                        .HasColumnType("bit");

                    b.Property<int?>("ServicioId")
                        .HasColumnType("int");

                    b.Property<bool>("TengoSegundoNivelActivo")
                        .HasColumnType("bit");

                    b.Property<string>("TipoFuncionarioOperativo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoPuesto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoResumido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Turno")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComputoId");

                    b.HasIndex("FuncionarioOperativoId");

                    b.HasIndex("ServicioId");

                    b.ToTable("OperativasDiarias");
                });

            modelBuilder.Entity("AccesoDatos.PlanificacionDiaria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CantidadHorasArmado")
                        .HasColumnType("float");

                    b.Property<double>("CantidadHorasExtras")
                        .HasColumnType("float");

                    b.Property<double>("CantidadHorasTotales")
                        .HasColumnType("float");

                    b.Property<bool>("ComienzoJornada")
                        .HasColumnType("bit");

                    b.Property<int?>("ComputoId")
                        .HasColumnType("int");

                    b.Property<bool>("Extra")
                        .HasColumnType("bit");

                    b.Property<bool>("Facturable")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FuncionarioOperativoId")
                        .HasColumnType("int");

                    b.Property<string>("FuncionarioSegundoNivel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HoraEntrada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HoraEntradaMarcada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HoraSalida")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HoraSalidaMarcada")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HoySegundoLibre")
                        .HasColumnType("bit");

                    b.Property<int>("IdMesaOperativa")
                        .HasColumnType("int");

                    b.Property<bool>("MostrarEnEscalafon")
                        .HasColumnType("bit");

                    b.Property<string>("NombrePuesto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Orden")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ProximoSegundoLibre")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Rotativo")
                        .HasColumnType("bit");

                    b.Property<bool>("SegundoNivel")
                        .HasColumnType("bit");

                    b.Property<int?>("ServicioId")
                        .HasColumnType("int");

                    b.Property<bool>("TengoSegundoNivelActivo")
                        .HasColumnType("bit");

                    b.Property<string>("TipoFuncionarioOperativo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoPuesto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoResumido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Turno")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComputoId");

                    b.HasIndex("FuncionarioOperativoId");

                    b.HasIndex("ServicioId");

                    b.ToTable("PlanificacionesDiarias");
                });

            modelBuilder.Entity("AccesoDatos.PreferenciaFuncionarioServicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ServicioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("ServicioId");

                    b.ToTable("PreferenciasFuncionariosServicio");
                });

            modelBuilder.Entity("AccesoDatos.RegistroHora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CantidadHorasArmado")
                        .HasColumnType("float");

                    b.Property<double>("CantidadHorasDiurnas")
                        .HasColumnType("float");

                    b.Property<double>("CantidadHorasEfectivas")
                        .HasColumnType("float");

                    b.Property<double>("CantidadHorasExtras")
                        .HasColumnType("float");

                    b.Property<double>("CantidadHorasNocLibreTrabajado")
                        .HasColumnType("float");

                    b.Property<double>("CantidadHorasNocturnas")
                        .HasColumnType("float");

                    b.Property<double>("CantidadHrsExtrasLibreTrabajado")
                        .HasColumnType("float");

                    b.Property<bool>("ComienzoJornada")
                        .HasColumnType("bit");

                    b.Property<int?>("ComputoId")
                        .HasColumnType("int");

                    b.Property<bool>("EnlaceHorario")
                        .HasColumnType("bit");

                    b.Property<bool>("Facturable")
                        .HasColumnType("bit");

                    b.Property<double>("Falta")
                        .HasColumnType("float");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("HoraEntrada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HoraSalida")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombrePuesto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ServicioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComputoId");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("ServicioId");

                    b.ToTable("RegistrosHoras");
                });

            modelBuilder.Entity("AccesoDatos.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Nivel")
                        .HasColumnType("int");

                    b.Property<string>("RolAsignado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("AccesoDatos.Rubro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Grupo")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubGrupo")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("Id");

                    b.ToTable("Rubros");
                });

            modelBuilder.Entity("AccesoDatos.Servicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Departamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DependeDeId")
                        .HasColumnType("int");

                    b.Property<string>("Detalle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Geolocalizacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GuardiaFisica")
                        .HasColumnType("bit");

                    b.Property<string>("NombreContactoServicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCoordinacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreDescriptivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelContactoServicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelCoordinacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("DependeDeId");

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("AccesoDatos.TipoContrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CargaTrabajoDiaria")
                        .HasColumnType("float");

                    b.Property<double>("CargaTrabajoSemanal")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modalidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TiposContratos");
                });

            modelBuilder.Entity("AccesoDatos.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MesaOperativaId")
                        .HasColumnType("int");

                    b.Property<string>("NombreUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RolId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MesaOperativaId");

                    b.HasIndex("RolId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("AccesoDatos.Ausencia", b =>
                {
                    b.HasOne("AccesoDatos.Computo", "Computo")
                        .WithMany()
                        .HasForeignKey("ComputoId");

                    b.HasOne("AccesoDatos.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId");

                    b.HasOne("AccesoDatos.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("ServicioId");

                    b.Navigation("Computo");

                    b.Navigation("Funcionario");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("AccesoDatos.Funcionario", b =>
                {
                    b.HasOne("AccesoDatos.MesaOperativa", "RespondeA")
                        .WithMany()
                        .HasForeignKey("RespondeAId");

                    b.HasOne("AccesoDatos.Rubro", "Rubro")
                        .WithMany()
                        .HasForeignKey("RubroId");

                    b.HasOne("AccesoDatos.TipoContrato", "TipoContrato")
                        .WithMany()
                        .HasForeignKey("TipoContratoId");

                    b.Navigation("RespondeA");

                    b.Navigation("Rubro");

                    b.Navigation("TipoContrato");
                });

            modelBuilder.Entity("AccesoDatos.NombrePuesto", b =>
                {
                    b.HasOne("AccesoDatos.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("ServicioId");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("AccesoDatos.OperativaDiaria", b =>
                {
                    b.HasOne("AccesoDatos.Computo", "Computo")
                        .WithMany()
                        .HasForeignKey("ComputoId");

                    b.HasOne("AccesoDatos.Funcionario", "FuncionarioOperativo")
                        .WithMany()
                        .HasForeignKey("FuncionarioOperativoId");

                    b.HasOne("AccesoDatos.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("ServicioId");

                    b.Navigation("Computo");

                    b.Navigation("FuncionarioOperativo");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("AccesoDatos.PlanificacionDiaria", b =>
                {
                    b.HasOne("AccesoDatos.Computo", "Computo")
                        .WithMany()
                        .HasForeignKey("ComputoId");

                    b.HasOne("AccesoDatos.Funcionario", "FuncionarioOperativo")
                        .WithMany()
                        .HasForeignKey("FuncionarioOperativoId");

                    b.HasOne("AccesoDatos.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("ServicioId");

                    b.Navigation("Computo");

                    b.Navigation("FuncionarioOperativo");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("AccesoDatos.PreferenciaFuncionarioServicio", b =>
                {
                    b.HasOne("AccesoDatos.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId");

                    b.HasOne("AccesoDatos.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("ServicioId");

                    b.Navigation("Funcionario");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("AccesoDatos.RegistroHora", b =>
                {
                    b.HasOne("AccesoDatos.Computo", "Computo")
                        .WithMany()
                        .HasForeignKey("ComputoId");

                    b.HasOne("AccesoDatos.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId");

                    b.HasOne("AccesoDatos.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("ServicioId");

                    b.Navigation("Computo");

                    b.Navigation("Funcionario");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("AccesoDatos.Servicio", b =>
                {
                    b.HasOne("AccesoDatos.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("AccesoDatos.MesaOperativa", "DependeDe")
                        .WithMany()
                        .HasForeignKey("DependeDeId");

                    b.Navigation("Cliente");

                    b.Navigation("DependeDe");
                });

            modelBuilder.Entity("AccesoDatos.Usuario", b =>
                {
                    b.HasOne("AccesoDatos.MesaOperativa", "MesaOperativa")
                        .WithMany()
                        .HasForeignKey("MesaOperativaId");

                    b.HasOne("AccesoDatos.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId");

                    b.Navigation("MesaOperativa");

                    b.Navigation("Rol");
                });
#pragma warning restore 612, 618
        }
    }
}
